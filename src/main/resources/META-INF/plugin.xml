<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
    <!-- Unique identifier of the plugin. It should be FQN. It cannot be changed between the plugin versions. -->
    <id>org.example.plugin_ballerina</id>

    <!-- Public plugin name should be written in Title Case.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-name -->
    <name>Plugin_ballerina</name>
    <name>Ballerina Swan Lake</name>

    <!-- A displayed Vendor name or Organization ID displayed on the Plugins Page. -->
    <vendor email="support@yourcompany.com" url="https://www.yourcompany.com">WSO2</vendor>

    <!-- Description of the plugin displayed on the Plugin Page and IDE Plugin Manager.
         Simple HTML elements (text formatting, paragraphs, and lists) can be added inside of <![CDATA[ ]]> tag.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-description -->
    <description><![CDATA[
    Enter short description for your plugin here.<br>
    <em>most HTML tags may be used</em>
  ]]></description>

    <!-- Product and plugin compatibility requirements.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html -->
    <depends>com.intellij.modules.platform</depends>

    <!-- Extension points defined by the plugin.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-extension-points.html -->
    <extensions defaultExtensionNs="com.intellij">
        <fileType
                name="Ballerina File"
                implementationClass="org.intellij.sdk.language.BallerinaFileType"
                fieldName="INSTANCE"
                language="Ballerina"
                extensions="bal"/>
        <lang.parserDefinition
                language="Ballerina"
                implementationClass="org.intellij.sdk.language.BallerinaParserDefinition"/>

        <lang.syntaxHighlighterFactory
                language="Ballerina"
                implementationClass="org.intellij.sdk.language.BallerinaSyntaxHighlighterFactory"/>
        <annotator
                language="Ballerina"
                implementationClass="org.intellij.sdk.language.BallerinaAnnotator"/>
        <lang.braceMatcher language="Ballerina"
                           implementationClass="org.intellij.sdk.language.BallerinaPairedBraceMatcher"/>

        <lang.commenter
                language="Ballerina"
                implementationClass="org.intellij.sdk.language.BallerinaCommenter"/>

        <typedHandler implementation="org.intellij.sdk.language.BallerinaTypedHandler"/>


<!--        <highlightErrorFilter implementation="org.intellij.sdk.language.BallerinaHighlightErrorFilter"-->
<!--                              id="BallerinaHighlightErrorFilter"/>-->

        <highlightErrorFilter implementation="org.intellij.sdk.language.BallerinaHighlightErrorFilter"
                              id="BallerinaHighlightErrorFilter"/>

        <sdkType implementation="org.intellij.sdk.language.BallerinaSdkType"/>

<!--        <moduleType-->
<!--                id="BALLERINA_MODULE_TYPE"-->
<!--                implementationClass="org.intellij.sdk.language.BallerinaModuleType"/>-->

<!--        <moduleBuilder builderClass="org.intellij.sdk.language.BallerinaProjectModuleBuilder"-->
<!--                       id="BALLERINA_MODULE_BUILDER"-->
<!--        />-->


        <configurationType
                implementation="org.intellij.sdk.language.BallerinaRunConfigurationType"/>

        <configurationType
                implementation="org.intellij.sdk.language.BallerinaTestConfigurationType"/>

        <codeInsight.lineMarkerProvider
                language="Ballerina"
                implementationClass="org.intellij.sdk.language.BallerinaRunLineMarkerProvider"/>

        <codeInsight.lineMarkerProvider
                language="Ballerina"
                implementationClass="org.intellij.sdk.language.BallerinaTestLineMarkerProvider"/>

        <preloadingActivity
                implementation="org.intellij.sdk.language.BallerinaPreloadingActivity"
                id="org.intellij.sdk.language.BallerinaPreloadingActivity"/>

        <statusBarWidgetFactory implementation="org.intellij.sdk.language.BallerinaDetectionWidgetFactory"
                                id="BallerinaStatusBarWidget"/>

        <statusBarWidgetFactory implementation="org.intellij.sdk.language.BallerinaIconWidgetFactory"
                                id="BallerinaIconWidget"/>

        <notificationGroup id="Ballerina Plugin Notifications"
                           displayType="BALLOON"
                           toolWindowId=""
                           isLogByDefault="true"/>

        <!-- register intellijLanguageClient as a Service OR as a plugin component (see readme)... -->
<!--        <applicationService serviceImplementation="org.wso2.lsp4intellij.IntellijLanguageClient"/>-->

        <!-- register a listener on editor events, required for lsp file sync -->
<!--        <editorFactoryListener implementation="org.wso2.lsp4intellij.listeners.LSPEditorListener"/>-->
<!--        <fileDocumentManagerListener implementation="org.wso2.lsp4intellij.listeners.LSPFileDocumentManagerListener"/>-->

        <!-- for displaying notifications by lsp -->
<!--        <notificationGroup id="lsp" displayType="STICKY_BALLOON"/>-->

        <!-- for displaying the statusbar icon -->
<!--        <statusBarWidgetFactory implementation="org.wso2.lsp4intellij.statusbar.LSPServerStatusWidgetFactory"-->
<!--                                id="org.wso2.lsp4intellij.statusbar.LSPServerStatusWidgetFactory"-->
<!--                                order="first" />-->

        <!-- needed for completion -->
<!--        <completion.contributor implementationClass="org.wso2.lsp4intellij.contributors.LSPCompletionContributor"-->
<!--                                id="org.wso2.lsp4intellij.contributors.LSPCompletionContributor" language="any"/>-->
        <!--         needed for completion as well as signature help -->
<!--        <typedHandler implementation="org.wso2.lsp4intellij.listeners.LSPTypedHandler"-->
<!--                      id="LSPTypedHandler"/>-->

        <!-- needed for code diagnostics -->
<!--        <externalAnnotator id="LSPAnnotator" language="Ballerina"-->
<!--                           implementationClass="org.wso2.lsp4intellij.contributors.annotator.LSPAnnotator"/>-->

        <!-- needed for Workspace Symbols -->
<!--        <gotoSymbolContributor implementation="org.wso2.lsp4intellij.contributors.symbol.LSPSymbolContributor"-->
<!--                               id="LSPSymbolContributor"/>-->

        <!-- needed for renaming -->
<!--        <renameHandler implementation="org.wso2.lsp4intellij.contributors.rename.LSPRenameHandler" id="LSPRenameHandler" order="first"/>-->
<!--        <renamePsiElementProcessor implementation="org.wso2.lsp4intellij.contributors.rename.LSPRenameProcessor" id="LSPRenameProcessor" order="first"/>-->

        <!-- debugger -->
        <programRunner id="ballerinaDebugger"
                       implementation="org.intellij.sdk.language.debugger.BallerinaDebugger"/>
        <xdebugger.breakpointType
                implementation="org.intellij.sdk.language.debugger.breakpoint.BallerinaBreakPointType"/>

        <lang.foldingBuilder language="Ballerina"
                             implementationClass="org.intellij.sdk.language.BallerinaFoldingBuilder"/>

    </extensions>



    <actions>
        <action id="org.intellij.sdk.language.BallerinaRunFileAction"
                class="org.intellij.sdk.language.BallerinaRunFileAction" text="Run Ballerina File">
            <add-to-group group-id="EditorPopupMenu.Run" anchor="last"/>
            <add-to-group group-id="ProjectViewPopupMenu" anchor="last"/>
        </action>
        <action id="org.intellij.sdk.language.BallerinaTestAction"
                class="org.intellij.sdk.language.BallerinaTestAction" text="Test Ballerina File">
            <add-to-group group-id="EditorPopupMenu.Run" anchor="last"/>
<!--            <add-to-group group-id="ProjectViewPopupMenu" anchor="last"/>-->
        </action>
        <action id="CreateBallerinaFile"
                class="org.intellij.sdk.language.BallerinaFileAction"
                text="Create Ballerina File"
                description="Creates a new Ballerina file">
            <add-to-group group-id="NewGroup" anchor="last"/>
        </action>
        <!-- needed for hover -->
<!--        <action id="org.intellij.sdk.action.QuickDocAction" class="org.wso2.lsp4intellij.actions.LSPQuickDocAction">-->
<!--        </action>-->

        <!-- needed for find references -->
<!--        <action class="org.wso2.lsp4intellij.actions.LSPReferencesAction" id="LSPFindUsages">-->
<!--            <keyboard-shortcut first-keystroke="shift alt F7" keymap="$default"/>-->
<!--        </action>-->
<!--        <action class="org.wso2.lsp4intellij.actions.LSPReformatAction" id="ReformatCode"-->
<!--                use-shortcut-of="ReformatCode"-->
<!--                overrides="true" text="Reformat Code"/>-->
<!--        <action class="org.wso2.lsp4intellij.actions.LSPShowReformatDialogAction" id="ShowReformatFileDialog"-->
<!--                use-shortcut-of="ShowReformatFileDialog" overrides="true" text="Show Reformat File Dialog"/>-->
    </actions>
<!--    <applicationListeners>-->
<!--        &lt;!&ndash; required for lsp file sync &ndash;&gt;-->
<!--        <listener class="org.wso2.lsp4intellij.listeners.VFSListener"-->
<!--                  topic="com.intellij.openapi.vfs.VirtualFileListener"/>-->
<!--        <listener class="org.wso2.lsp4intellij.listeners.LSPProjectManagerListener"-->
<!--                  topic="com.intellij.openapi.project.ProjectManagerListener"/>-->
<!--    </applicationListeners>-->


</idea-plugin>