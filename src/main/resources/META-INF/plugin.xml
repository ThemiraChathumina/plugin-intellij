<idea-plugin>
    <id>io.ballerina</id>
    <name>Ballerina Swan Lake</name>
    <version>2.0.0-SNAPSHOT</version>
    <vendor email="ballerinalang@wso2.com" url="https://ballerina.io/">BallerinaLang</vendor>

    <description><![CDATA[
      The Ballerina Swan Lake IntelliJ plugin provides the <a href="https://ballerina.io/">Ballerina Swan Lake</a> development capabilities
      in IntelliJ IDEA.
      <br><br>For instructions on how to download, install, and use the features of the plugin, refer the
      <a href="https://v1-0.ballerina.io/learn/tools-ides/intellij-plugin/">Ballerina IntelliJ plugin Guide</a>.
    ]]></description>

    <change-notes><![CDATA[
      <ul>
        <li> Introduced syntax highlighting support for Ballerina Swan Lake. </li>
      </ul>
    ]]>
    </change-notes>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
    <idea-version since-build="222"/>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <depends>com.intellij.modules.lang</depends>

    <extensions defaultExtensionNs="com.intellij">
        <fileType
                name="Ballerina File"
                implementationClass="io.ballerina.plugins.idea.BallerinaFileType"
                fieldName="INSTANCE"
                language="Ballerina"
                extensions="bal"/>

        <lang.parserDefinition
                language="Ballerina"
                implementationClass="io.ballerina.plugins.idea.BallerinaParserDefinition"/>

        <lang.syntaxHighlighterFactory
                language="Ballerina"
                implementationClass="io.ballerina.plugins.idea.highlighting.BallerinaSyntaxHighlighterFactory"/>

        <annotator
                language="Ballerina"
                implementationClass="io.ballerina.plugins.idea.highlighting.BallerinaAnnotator"/>

        <lang.braceMatcher language="Ballerina"
                           implementationClass="io.ballerina.plugins.idea.editor.BallerinaPairedBraceMatcher"/>

        <lang.commenter
                language="Ballerina"
                implementationClass="io.ballerina.plugins.idea.editor.BallerinaCommenter"/>

        <typedHandler implementation="io.ballerina.plugins.idea.editor.BallerinaTypedHandler"/>

        <highlightErrorFilter implementation="io.ballerina.plugins.idea.editor.BallerinaHighlightErrorFilter"
                              id="BallerinaHighlightErrorFilter"/>

        <editorFactoryListener implementation="io.ballerina.plugins.idea.preloading.BallerinaEditorFactoryListener"/>

        <statusBarWidgetFactory
                implementation="io.ballerina.plugins.idea.widget.BallerinaDetectionWidgetFactory"
                id="BallerinaStatusBarWidget"/>

        <statusBarWidgetFactory implementation="io.ballerina.plugins.idea.widget.BallerinaIconWidgetFactory"
                                id="BallerinaIconWidget"/>

        <notificationGroup id="Ballerina Plugin Notifications"
                           displayType="BALLOON"
                           toolWindowId=""
                           isLogByDefault="true"/>

        <applicationService serviceImplementation="io.ballerina.plugins.idea.sdk.BallerinaSdkSettings"/>

        <applicationService serviceImplementation="io.ballerina.plugins.idea.preloading.BallerinaLSConfigSettings"/>

        <projectConfigurable groupId="language"
                             instance="io.ballerina.plugins.idea.configuration.BallerinaLanguageSettingsConfigurable"
                             displayName="Ballerina"/>
        <configurationType
                implementation="io.ballerina.plugins.idea.runconfig.application.BallerinaApplicationRunConfigType"/>

        <configurationType
                implementation="io.ballerina.plugins.idea.runconfig.test.BallerinaTestConfigurationType"/>

        <codeInsight.lineMarkerProvider
                language="Ballerina"
                implementationClass="io.ballerina.plugins.idea.runconfig.application.BallerinaRunLineMarkerProvider"/>

        <codeInsight.lineMarkerProvider
                language="Ballerina"
                implementationClass="io.ballerina.plugins.idea.runconfig.test.BallerinaTestLineMarkerProvider"/>

        <applicationService serviceImplementation="org.wso2.lsp4intellij.IntellijLanguageClient"/>

        <editorFactoryListener implementation="org.wso2.lsp4intellij.listeners.LSPEditorListener"/>

        <fileDocumentManagerListener implementation="org.wso2.lsp4intellij.listeners.LSPFileDocumentManagerListener"/>

        <notificationGroup id="lsp" displayType="STICKY_BALLOON"/>

        <completion.contributor implementationClass="org.wso2.lsp4intellij.contributors.LSPCompletionContributor"
                                id="org.wso2.lsp4intellij.contributors.LSPCompletionContributor" language="Ballerina"/>

        <typedHandler implementation="org.wso2.lsp4intellij.listeners.LSPTypedHandler"
                      id="LSPTypedHandler"/>

        <externalAnnotator id="LSPAnnotator" language="Ballerina"
                           implementationClass="org.wso2.lsp4intellij.contributors.annotator.LSPAnnotator"/>

        <gotoSymbolContributor implementation="org.wso2.lsp4intellij.contributors.symbol.LSPSymbolContributor"
                               id="LSPSymbolContributor"/>

        <notificationGroup id="LSPProgressNotification"
                           displayType="NONE"/>

        <editorFactoryMouseMotionListener implementation="io.ballerina.plugins.idea.highlighting.BallerinaIdentifierUnderline"/>

        <lang.foldingBuilder language="Ballerina"
                             implementationClass="io.ballerina.plugins.idea.editor.BallerinaFoldingBuilder"/>

        <spellchecker.support language="Ballerina"
                              implementationClass="io.ballerina.plugins.idea.spellchecker.BallerinaSpellcheckingStrategy"/>

        <!--        Todo: Enable after restoring the renaming support-->
        <!--        <renameHandler implementation="org.wso2.lsp4intellij.contributors.rename.LSPRenameHandler" id="LSPRenameHandler" order="first"/>-->
        <!--        <renamePsiElementProcessor implementation="org.wso2.lsp4intellij.contributors.rename.LSPRenameProcessor" id="LSPRenameProcessor" order="first"/>-->
    </extensions>
    <actions>
        <action id="io.ballerina.plugins.idea.runconfig.application.BallerinaRunFileAction"
                class="io.ballerina.plugins.idea.runconfig.application.BallerinaRunFileAction" text="Run Ballerina File">
            <add-to-group group-id="EditorPopupMenu.Run" anchor="last"/>
            <add-to-group group-id="ProjectViewPopupMenu" anchor="last"/>
        </action>
        <action id="io.ballerina.plugins.idea.runconfig.test.BallerinaTestAction"
                class="io.ballerina.plugins.idea.runconfig.test.BallerinaTestAction" text="Test Ballerina File">
            <add-to-group group-id="EditorPopupMenu.Run" anchor="last"/>
        </action>
        <action id="org.intellij.sdk.action.QuickDocAction" class="org.wso2.lsp4intellij.actions.LSPQuickDocAction">
        </action>
        <action class="org.wso2.lsp4intellij.actions.LSPReferencesAction" id="LSPFindUsages">
            <keyboard-shortcut first-keystroke="shift alt F7" keymap="$default"/>
        </action>
        <action class="org.wso2.lsp4intellij.actions.LSPReformatAction" id="ReformatCode"
                use-shortcut-of="ReformatCode"
                overrides="true" text="Reformat Code"/>
        <action class="org.wso2.lsp4intellij.actions.LSPShowReformatDialogAction" id="ShowReformatFileDialog"
                use-shortcut-of="ShowReformatFileDialog" overrides="true" text="Show Reformat File Dialog"/>
    </actions>
    <applicationListeners>
        <listener class="org.wso2.lsp4intellij.listeners.VFSListener"
                  topic="com.intellij.openapi.vfs.VirtualFileListener"/>
        <listener class="org.wso2.lsp4intellij.listeners.LSPProjectManagerListener"
                  topic="com.intellij.openapi.project.ProjectManagerListener"/>
    </applicationListeners>
</idea-plugin>